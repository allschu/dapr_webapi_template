apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  namespace: development
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            cors:
                allowed_origins:
                - http://*
                - https://*
            endpoint:  0.0.0.0:4318
    extensions:
      health_check:
      pprof:
        endpoint: :1888
      zpages:
        endpoint: :55679
    exporters:
      googlecloud:
        log:
            default_log_name: opentelemetry-collector
      debug:
        verbosity: basic  # Options: basic, normal, detailed
      # Depending on where you want to export your trace, use the
      # correct OpenTelemetry trace exporter here.
      #
      # Refer to
      # https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter
      # and
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter
      # for full lists of trace exporters that you can use, and how to
      # configure them.
      otlp:
       endpoint: "otel-collector.development.svc.cluster.local:4317"
       tls:
         insecure: true
    processors: 
        filter/ottl:
            error_mode: ignore
            traces:
              span: #filter out health check traces and signal notifications
                - 'attributes["url.path"] == "/health"'
                - 'attributes["url.path"] == "/printing/health"'
                - 'attributes["url.path"] == "/printing/notifications"'
        batch:
            send_batch_max_size: 200
            send_batch_size: 200
            timeout: 5s
    service:
      extensions: [pprof, zpages, health_check]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [filter/ottl, batch]
          exporters: [otlp, debug, googlecloud]
        logs:
          receivers: [otlp]
          exporters: [debug, googlecloud]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: development
  labels:
    app: opencesus
    component: otel-collector
spec:
  ports:
  - name: otel # Default endpoint for OTEL receiver.
    port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    component: otel-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: development
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  replicas: 1  # scale out based on your usage
  selector:
    matchLabels:
      app: opentelemetry
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      serviceAccountName: trancon-k8-service-account
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib-dev:latest
        command:
          - "/otelcontribcol"
          - "--config=/conf/otel-collector-config.yaml"
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 400Mi
        ports:
          - containerPort: 4317 # Default endpoint for OTEL receiver.
        volumeMounts:
          - name: otel-collector-config-vol
            mountPath: /conf
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
